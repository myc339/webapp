AWSTemplateFormatVersion: 2010-09-09
# This CloudFormation template deploys a basic VPC / Network.
Parameters:
    VpcCIDR:
      Description: Please enter the IP range (CIDR notation) for this VPC
      Type: String
      AllowedPattern: "(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9]\\.){3}[0-9]{1,3}(\\/(1[6-9]|2[0-8]))"
      ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28" (see http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html)
    PublicSubnet1CIDR:
      Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
      Type: String
      AllowedPattern: "(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9]\\.){3}[0-9]{1,3}(\\/(1[6-9]|2[0-8]))"
      ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28" (see http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html)
    PublicSubnet2CIDR:
      Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
      Type: String
      AllowedPattern: "(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9]\\.){3}[0-9]{1,3}(\\/(1[6-9]|2[0-8]))"
      ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28" (see http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html)

    PublicSubnet3CIDR:
      Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
      Type: String
      AllowedPattern: "(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9]\\.){3}[0-9]{1,3}(\\/(1[6-9]|2[0-8]))"
      ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28" (see http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html)
Resources:
  # First, a VPC:
  #Create Virtual Private Cloud (VPC).
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value:  !Join ['', ["VPC ",!Ref "AWS::StackName"  ]]
  #Create subnets in your VPC. You must create 3 subnets,
  #each in different availability zone in the same region in the same VPC
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Subnets1
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Subnets1
  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet3CIDR
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Subnets3
  ##Create Internet Gateway resource. and attach the Internet Gateway to the VPC.
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} InternetGateway
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  #Create a public route table. Attach all subnets created above to the route table.
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Public Routes
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetA
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetB
  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetC
  #Create a public route in the public route table created above with destination CIDR block 0.0.0.0/0
  #and internet gateway created above as the target.
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway